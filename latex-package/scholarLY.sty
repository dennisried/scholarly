\ProvidesPackage{scholarLY}

\RequirePackage{ifthen}
\RequirePackage{keyval}
\RequirePackage{enumitem}
\RequirePackage{xstring}

% TODO consider reorganizing package structure (this file master, with subfiles)
% TODO support more formats, such as two-columns per annotation (e.g. Message | the message )
% TODO Provide labels (which can be easily redefined) for user-customized templates
% TODO test \enumOptions capabilities
% TODO prevent ann message breaking
% TODO messages not accepting `uppercase`, though other message styles working.
% TODO test on engines other than pdflatex


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% OPTIONS ... the customizable part of the package
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Some options can be applied by wrapping the \annotations{filename.annotations.inp} in
% respective environment, such as {multicols}, {xcolor}, etc.
%
% If specific changes are made to items within the text of the actual .inp lists (written
% by the user in the LilyPond document), they will override wrappers as applicable.


% ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
%% ~ ~ ~ GLOBAL STYLING OPTIONS ~
% ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

% style predicates:

\newcommand{\annType}[1]{#1} % Annotation Type; just italics
\newcommand{\annMeasure}[1]{#1} % just bold
\newcommand{\annBeat}[1]{#1} % none
\newcommand{\annVoice}[1]{#1} % none ; this is Voice or Instrument (e.g. Viola)
\newcommand{\annAffected}[1]{#1} % none
\newcommand{\annMessage}[1]{#1} % none
\newcommand{\annFootnote}[1]{#1} % none

% To update styles:

\newcommand{\styleAnnType}[1]{\renewcommand{\annType}[1]{#1}}
\newcommand{\styleAnnMeasure}[1]{\renewcommand{\annMeasure}[1]{#1}}
\newcommand{\styleAnnBeat}[1]{\renewcommand{\annBeat}[1]{#1}}
\newcommand{\styleAnnVoice}[1]{\renewcommand{\annVoice}[1]{#1}}
\newcommand{\styleAnnAffected}[1]{\renewcommand{\annAffected}[1]{#1}}
\newcommand{\styleAnnMessage}[1]{\renewcommand{\annMessage}[1]{#1}}
\newcommand{\styleAnnFootnote}[1]{\renewcommand{\annFootnote}[1]{#1}}
%
% ex: \styleAnnType{\textit{#1}}


% ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
%% ~ ~ ~ DRAFT or FINAL MODE, and styling therein ~
% ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~


% create custom settings for `draft` mode:

\newcommand{\customdraft}{}
\newcommand\setcustomdraft[1]{\renewcommand{\customdraft}{#1}}
  \setcustomdraft{
    \styleAnnMessage{##1}
  } % the default settings for DRAFT mode = nothing

\newcommand{\customdraftornot}{}
\newcommand{\usecustomdraft}{\renewcommand{\customdraftornot}{\customdraft}}


% create custom settings for `final` mode:

\newcommand{\customfinal}{}
\newcommand\setcustomfinal[1]{\renewcommand{\customfinal}{#1}}
  \setcustomfinal{
    \styleAnnMessage{##1}
    \styleAnnMeasure{\color{red}{\textit{##1}}}
  } % the default settings for FINAL mode (just example for now; make bland later)

\newcommand{\customfinalornot}{}
\newcommand{\usecustomfinal}{\renewcommand{\customfinalornot}{\customfinal}}


% let custom final settings carry over to draft mode

\newcommand{\finalfordraft}{\renewcommand{\customdraft}{\customfinal}}


% break annotations or not:

\newcommand{\letAnnBreakornot}{\par\nobreak} % default = no break
\newcommand{\letAnnBreak}{\renewcommand{\letAnnBreakornot}{\par}} % let break
\newcommand{\avoidAnnBreak}{\renewcommand{\letAnnBreakornot}{\par\nobreak}} % avoid break
%
% NOTE If \enumoptions (see below) specifies vertical spacing within items, \letAnnBreak
%      is more likely to result in breaks. Otherwise, LaTeX will try to avoid breaking
%      even with \letAnnBreak employed.


% inline or stacked annotations:

\newcommand{\skipornot}{}
\newcommand{\typeSkipornot}{}
\newcommand{\modePostType}{}

\newcommand{\inlineParams}{
  \renewcommand{\skipornot}{, }
  \renewcommand{\typeSkipornot}{} % TODO check these behaviors
  \renewcommand{\modePostType}{} % TODO check these behaviors
}

\newcommand{\stackedParams}{
  \renewcommand{\skipornot}{\letAnnBreakornot}
  \renewcommand{\typeSkipornot}{\letAnnBreakornot} % TODO check these behaviors
  \renewcommand{\modePostType}{} % TODO check these behaviors
}


% declare draft/final options:

\newif\ifex@draft % (implicitly final) ... i.e. draft mode if set, otherwise final mode,
                  % which can also be explicitly set: \usepackage[final]{scholarLY}

\DeclareOption{draft}{\ex@drafttrue}
\DeclareOption{final}{\ex@draftfalse}
\ProcessOptions*

\ifex@draft
  \stackedParams % default, can be overwritten in custom or global settings
  \newcommand{\CRname}{\annType{(Critical Remark) }}
  \newcommand{\MIname}{\annType{(Musical Issue) }}
  \newcommand{\LIname}{\annType{(LilyPond Issue) }}
  \newcommand{\Qname}{\annType{(Question) }}
  \newcommand{\TDname}{\annType{(TODO) }}
  \newcommand{\annStyleMode}{\customdraftornot}
\else
  \inlineParams % default, can be overwritten in custom or global settings
  \newcommand{\annStyleMode}{\customfinalornot}
  \newcommand{\CRname}{\annType{}}
  \newcommand{\MIname}{\annType{}}
  \newcommand{\LIname}{\annType{}}
  \newcommand{\Qname}{\annType{}}
  \newcommand{\TDname}{\annType{}}
\fi


%% ~ ~ ~ ADDITIONAL CUSTOMIZATIONS ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

% apply any of the usual enumerate arguments to the list:

\newcommand{\enumOptions}{}
\newcommand{\setEnumOptions}[1]{\renewcommand{\enumOptions}{#1}}


% do something immediately after the type (only effective if type present)

\newcommand{\postannType}{} % add vspace, hspace, characters, etc. *after* type
\newcommand{\setpostannType}[1]{\renewcommand{\postannType}{#1}}
%
% NOTE: add \par to correct vspace behavior, i.e. \setpostannType{\par\vspace{1cm}}


% do something immediately before each of the arguments (presently affects all):

\newcommand{\preannArg}{}
\newcommand{\setpreannType}[1]{\renewcommand{\preannType}{#1}}


% {prependFirst}{prepend} (MESSAGE) {append} {appendLast}:

\newcommand{\prependMessageFirst}{}
\newcommand{\prependMessage}{``} % default
\newcommand{\appendMessage}{''} % default
\newcommand{\appendMessageLast}{}
\newcommand{\setPreMessFirst}[1]{\renewcommand{\prependMessageFirst}{\unskip#1}}
\newcommand{\setPreMess}[1]{\renewcommand{\prependMessage}{#1\unskip}}
\newcommand{\setAppMess}[1]{\renewcommand{\appendMessage}{\unskip#1\unskip}}
\newcommand{\setAppMessLast}[1]{\renewcommand{\appendMessageLast}{\unskip#1\unskip}}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% ENVIRONMENTS and COMMANDS ... the main part of the package
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% ~ ~ ~ ALLOW (default) or AVOID breaking arguments in annotations ~ ~ ~ ~ ~ ~

% TODO - find a better solution?

% Currently, \skipornot (the main breaking toggle) = {\par\nobreak} when set to
% skip, which does protect from breaking. But rather than stretching/squeezing
% the lines, it rounds down (if necessary) and pulls the footnotes (if any) up.

% the following *will* toggle breaking allowance/avoidance
% ex: \letAnnBreak


%% ~ ~ ~ \annotations = the main command ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

\newcommand{\annotations}[1]
{\begin{enumerate}[mode=boxed]\enumOptions\annStyleMode\input{#1}\end{enumerate}}
%
% ex: \annotations{annotate.annotations.inp}


%% ~ ~ ~ KEY / VALUE arguments ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

\define@key{scholarLYannotations}{grob}{\edef\lygrob{\detokenize{#1}}}
\define@key{scholarLYannotations}{grob-location}{\edef\lygroblocation{\detokenize{#1}}}
\define@key{scholarLYannotations}{grob-type}{\def\lygrobtype{#1}}
\define@key{scholarLYannotations}{input-file-name}{\def\lyinputfilename{#1}}
\define@key{scholarLYannotations}{context-id}{\def\lycontextid{#1}}
\define@key{scholarLYannotations}{location}{\edef\lylocation{\detokenize{#1}}}
\define@key{scholarLYannotations}{type}{\def\lytype{#1}}
\define@key{scholarLYannotations}{message}{\def\lymessage{#1}}
\define@key{scholarLYannotations}{context}{\def\lycontext{#1}}
\define@key{scholarLYannotations}{fn-one-text}{\def\lyfnonetext{#1}}
\define@key{scholarLYannotations}{fn-two-text}{\def\lyfntwotext{#1}}
\define@key{scholarLYannotations}{fn-three-text}{\def\lyfnthreetext{#1}}
\define@key{scholarLYannotations}{fn-four-text}{\def\lyfnfourtext{#1}}
\define@key{scholarLYannotations}{fn-five-text}{\def\lyfnfivetext{#1}}
\define@key{scholarLYannotations}{ann-footnote}{\def\lyannfootnote{#1}}

\setkeys{scholarLYannotations}{ % default values
  grob = no value given,
  grob-location = no value given,
  grob-type = no value given,
  input-file-name = no value given,
  context-id = no value given,
  location = no value given,
  type = no value given,
  message = no value given,
  context = no value given,
  fn-one-text = {\color{red} Oops! Nothing has been entered for this footnote.},
  fn-two-text = {\color{red} Oops! Nothing has been entered for this footnote.},
  fn-three-text = {\color{red} Oops! Nothing has been entered for this footnote.},
  fn-four-text = {\color{red} Oops! Nothing has been entered for this footnote.},
  fn-five-text = {\color{red} Oops! Nothing has been entered for this footnote.},
  ann-footnote = {no value given}
}

\newcommand{\resetkeys}{
  \setkeys{scholarLYannotations}{ % default values
    grob = no value given,
    grob-location = no value given,
    grob-type = no value given,
    input-file-name = no value given,
    context-id = no value given,
    location = no value given,
    type = no value given,
    message = no value given,
    context = no value given,
    fn-one-text = {\color{red} Oops! Nothing has been entered for this footnote.},
    fn-two-text = {\color{red} Oops! Nothing has been entered for this footnote.},
    fn-three-text = {\color{red} Oops! Nothing has been entered for this footnote.},
    fn-four-text = {\color{red} Oops! Nothing has been entered for this footnote.},
    fn-five-text = {\color{red} Oops! Nothing has been entered for this footnote.},
    ann-footnote = {no value given}
  }
}

% TODO implement this:
\newcommand{\noMessError}{\color{red} Oops! No message has been entered for this annotation.}


%% ~ ~ ~ more TOGGLES ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

% commands for linking footnotes to text
% NOTE - marks/text are only linked to their respective partners
% (suffixes `One`, `Two`, etc. aren't don't influence the actual order)

\newcommand{\fnOne}{\unskip\footnote{\lyfnonetext} }
\newcommand{\fnTwo}{\unskip\footnote{\lyfntwotext} }
\newcommand{\fnThree}{\unskip\footnote{\lyfnthreetext} }
\newcommand{\fnFour}{\unskip\footnote{\lyfnfourtext} }
\newcommand{\fnFive}{\unskip\footnote{\lyfnfivetext} }


% hide or show annotation types manually

\newcommand{\hideAnnTypes}{
  \renewcommand{\typeSkipornot}{}
  \renewcommand{\CRname}{}
  \renewcommand{\MIname}{}
  \renewcommand{\LIname}{}
  \renewcommand{\Qname}{}
  \renewcommand{\TDname}{}
}

\newcommand{\showAnnTypes}{
  \renewcommand{\typeSkipornot}{\modePostType}
  \renewcommand{\CRname}{\annType{(Critical Remark) }} % if the user defines a ','
  \renewcommand{\MIname}{\annType{(Musical Issue) }}   % for \postannType, they must
  \renewcommand{\LIname}{\annType{(LilyPond Issue) }}  % also \unskip to remove the
  \renewcommand{\Qname}{\annType{(Question) }}         % cushion here.
  \renewcommand{\TDname}{\annType{(To Do) }}
}


% if same measure, optionally substitute:

\newcommand{\previousMeasure}{0} % default
\newcommand{\sameMeasure}{---} % user may redefine
\newcommand{\currentMeasure}{0} % default
\newcommand{\verboseMeasures}{\renewcommand{\sameMeasure}{M.\currentMeasure}}
% \verboseMeasures makes measures always show


% optionally substitute same beat (if *also* same measure):

\newcommand{\previousBeat}{0}
\newcommand{\sameBeat}{{}\unskip}
\newcommand{\currentBeat}{0}
\newcommand{\verboseBeats}{\renewcommand{\sameBeat}{beat \currentBeat,}}
% \verboseBeats make beats always show


%% ~ ~ ~ the PARSERS ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

% test the message for punctuations, and store the result:

\newcommand{\annMessagePunct}{} % default, no punctuation

\newcommand{\testMessagePunct}{
  \saveexpandmode\expandarg
    \IfEndWith{\lymessage}{.}
      % true
      {\renewcommand{\annMessagePunct}{.}}
      % false
      {\IfEndWith{\lymessage}{?}
        % true
        {\renewcommand{\annMessagePunct}{?}}
        % false
        {\IfEndWith{\lymessage}{!}
          % true
          {\renewcommand{\annMessagePunct}{!}}
          % false
          {\renewcommand{\annMessagePunct}{\unskip}}
        }
      }
  \restoreexpandmode
}


% parse messages:
% TODO unskip ONLY if prependMessage is NOT equal to {}

\newcommand{\annMessageParse}{
  \saveexpandmode\expandarg
    \IfEndWith{\lymessage}{.}
      % true; the user set a period for punctuation
      {\unskip\StrGobbleRight{\lymessage}{1}}
      % false
      {\IfEndWith{\lymessage}{?}
        % true; the user set a question mark for punctuation
        {\unskip\StrGobbleRight{\lymessage}{1}}
        % false
        {\IfEndWith{\lymessage}{!}
          % true; the user set an exclamation point for punctuation
          {\unskip\StrGobbleRight{\lymessage}{1}}
          % false
          {\ifthenelse{\equal{\lymessage}{no value given}}{\unskip\noMessError}
            % else
            {\ifthenelse{\equal{\lymessage}{}}{\unskip\noMessError}
              % else
              {\unskip{\lymessage}}}}
        }
      }
  \restoreexpandmode
}


% set the append/punct vs. punct/append orientations:

\newcommand{\annMessTail}{\annMessagePunct\appendMessage} % default = Punct, Append

\newcommand{\annMessPunctAppend}{
  \renewcommand{\annMessTail}{\appendMessage\unskip\annMessagePunct}} % Append, Punct

\newcommand{\annMessAppendPunct}{
  \renewcommand{\annMessTail}{\annMessagePunct\unskip\appendMessage}} % Punct, Append


% annotation parsers:

\newcommand{\criticalRemark}[6][]{
\resetkeys
  \setkeys{scholarLYannotations}{#1}
  \testMessagePunct
    \renewcommand{\currentMeasure}{#3}
    \renewcommand{\currentBeat}{#3}
      \item{\CRname\typeSkipornot
      \ifthenelse{\equal{#2}{\previousMeasure}}{\annMeasure{\sameMeasure}}
        {\postannType\preannArg{\annMeasure{M.#2,}}}
      \ifthenelse{\equal{#2}{\previousMeasure}}
        {\ifthenelse{\equal{#3}{}}{\unskip{}}
          {\ifthenelse{\equal{#3}{\previousBeat}}{\sameBeat\skipornot}
            {\annBeat{beat #3}\skipornot}}}
        {\annBeat{beat #3}\skipornot}
      \ifthenelse{\equal{#4}{}}{\unskip{}}{\preannArg\annVoice{#4}\skipornot}
      \ifthenelse{\equal{#5}{}}{\unskip{}}{\preannArg\annAffected{#5}\skipornot}
      \preannArg{\annMessage{{\prependMessageFirst\prependMessage{\annMessageParse}\unskip\annMessTail}\unskip}
      \ifthenelse{\equal{\lyannfootnote}{no value given}}{}
        {\unskip\annFootnote{\footnote{\lyannfootnote}}}\appendMessageLast}}
    \renewcommand{\previousMeasure}{#2}
    \renewcommand{\previousBeat}{#3}
}

\newcommand{\musicalIssue}[6][]{
\resetkeys
  \setkeys{scholarLYannotations}{#1}
  \testMessagePunct
    \renewcommand{\currentMeasure}{#2}
    \renewcommand{\currentBeat}{#3}
      \item{\MIname\typeSkipornot
      \ifthenelse{\equal{#2}{\previousMeasure}}{\annMeasure{\sameMeasure}}
        {\postannType\preannArg{\annMeasure{M.#2,}}}
      \ifthenelse{\equal{#2}{\previousMeasure}}
        {\ifthenelse{\equal{#3}{}}{\unskip{}}
          {\ifthenelse{\equal{#3}{\previousBeat}}{\sameBeat\skipornot}
            {\annBeat{beat #3}\skipornot}}}
        {\annBeat{beat #3}\skipornot}
      \ifthenelse{\equal{#4}{}}{\unskip{}}{\preannArg\annVoice{#4}\skipornot}
      \ifthenelse{\equal{#5}{}}{\unskip{}}{\preannArg\annAffected{#5}\skipornot}
      \preannArg{\annMessage{{\prependMessageFirst\prependMessage\annMessageParse\unskip\annMessTail}\unskip}
      \ifthenelse{\equal{\lyannfootnote}{no value given}}{}
        {\unskip\annFootnote{\footnote{\lyannfootnote}}}\appendMessageLast}}
    \renewcommand{\previousMeasure}{#2}
    \renewcommand{\previousBeat}{#3}
}

\newcommand{\lilypondIssue}[6][]{
\resetkeys
  \setkeys{scholarLYannotations}{#1}
  \testMessagePunct
    \renewcommand{\currentMeasure}{#2}
    \renewcommand{\currentBeat}{#3}
      \item{\LIname\typeSkipornot
      \ifthenelse{\equal{#2}{\previousMeasure}}{\annMeasure{\sameMeasure}}
        {\postannType\preannArg{\annMeasure{M.#2,}}}
      \ifthenelse{\equal{#2}{\previousMeasure}}
        {\ifthenelse{\equal{#3}{}}{\unskip{}}
          {\ifthenelse{\equal{#3}{\previousBeat}}{\sameBeat\skipornot}
            {\annBeat{beat #3}\skipornot}}}
        {\annBeat{beat #3}\skipornot}
      \ifthenelse{\equal{#4}{}}{\unskip{}}{\preannArg\annVoice{#4}\skipornot}
      \ifthenelse{\equal{#5}{}}{\unskip{}}{\preannArg\annAffected{#5}\skipornot}
      \preannArg{\annMessage{{\prependMessageFirst\prependMessage\annMessageParse\unskip\annMessTail}\unskip}
      \ifthenelse{\equal{\lyannfootnote}{no value given}}{}
        {\unskip\annFootnote{\footnote{\lyannfootnote}}}\appendMessageLast}}
    \renewcommand{\previousMeasure}{#2}
    \renewcommand{\previousBeat}{#3}
}

\newcommand{\question}[6][]{
\resetkeys
  \setkeys{scholarLYannotations}{#1}
  \testMessagePunct
    \renewcommand{\currentMeasure}{#2}
    \renewcommand{\currentBeat}{#3}
      \item{\Qname\typeSkipornot
      \ifthenelse{\equal{#2}{\previousMeasure}}{\annMeasure{\sameMeasure}}
        {\postannType\preannArg{\annMeasure{M.#2,}}}
      \ifthenelse{\equal{#2}{\previousMeasure}}
        {\ifthenelse{\equal{#3}{}}{\unskip{}}
          {\ifthenelse{\equal{#3}{\previousBeat}}{\sameBeat\skipornot}
            {\annBeat{beat #3}\skipornot}}}
        {\annBeat{beat #3}\skipornot}
      \ifthenelse{\equal{#4}{}}{\unskip{}}{\preannArg\annVoice{#4}\skipornot}
      \ifthenelse{\equal{#5}{}}{\unskip{}}{\preannArg\annAffected{#5}\skipornot}
      \preannArg{\annMessage{{\prependMessageFirst\prependMessage\annMessageParse\unskip\annMessTail}\unskip}
      \ifthenelse{\equal{\lyannfootnote}{no value given}}{}
        {\unskip\annFootnote{\footnote{\lyannfootnote}}}\appendMessageLast}}
    \renewcommand{\previousMeasure}{#2}
    \renewcommand{\previousBeat}{#3}
}

\newcommand{\todo}[6][]{
\resetkeys
  \setkeys{scholarLYannotations}{#1}
  \testMessagePunct
    \renewcommand{\currentMeasure}{#2}
    \renewcommand{\currentBeat}{#3}
      \item{\TDname\typeSkipornot
      \ifthenelse{\equal{#2}{\previousMeasure}}{\annMeasure{\sameMeasure}}
        {\postannType\preannArg{\annMeasure{M.#2,}}}
      \ifthenelse{\equal{#2}{\previousMeasure}}
        {\ifthenelse{\equal{#3}{}}{\unskip{}}
          {\ifthenelse{\equal{#3}{\previousBeat}}{\sameBeat\skipornot}
            {\annBeat{beat #3}\skipornot}}}
        {\annBeat{beat #3}\skipornot}
      \ifthenelse{\equal{#4}{}}{\unskip{}}{\preannArg\annVoice{#4}\skipornot}
      \ifthenelse{\equal{#5}{}}{\unskip{}}{\preannArg\annAffected{#5}\skipornot}
      \preannArg{\annMessage{{\prependMessageFirst\prependMessage\annMessageParse\unskip\annMessTail}\unskip}
      \ifthenelse{\equal{\lyannfootnote}{no value given}}{}
        {\unskip\annFootnote{\footnote{\lyannfootnote}}}\appendMessageLast}}
    \renewcommand{\previousMeasure}{#2}
    \renewcommand{\previousBeat}{#3}
}

\endinput
